!Switch
[mu_d, mu_s, d_c, s_yz, s_xz, Tnuc_n, Tnuc_s, Tnuc_d]: !ConstantMap
  map:
    mu_s: 0.18
    mu_d: 0.12
    d_c: 0.3
    s_yz: 0.0
    s_xz: 0.0
    Tnuc_n: 0
    Tnuc_s: 0
    Tnuc_d: 0

[cohesion,forced_rupture_time]: !LuaMap
  returns: [cohesion,forced_rupture_time]
  function: |
      function f (x)
        cohesion = -400000.-200*math.max(x["z"]+4000.,0)

        r = math.sqrt((x["x"]+5000.0)^2 +(x["z"]+10000.0)^2)
        r_crit = 4000.0
        Vs = 3464.0
        if (r <= r_crit) then
          forced_rupture_time =  r/(0.7*Vs)+(0.081*r_crit/(0.7*Vs))*(1.0/(1.0-(r/r_crit)^2)-1.0)
        else
          forced_rupture_time = 1000000000.0
        end

        return {
          cohesion = cohesion,
          forced_rupture_time = forced_rupture_time
        }
      end

[s_xx, s_xy, s_yy, s_zz]: !LuaMap
  returns: [s_xx, s_xy, s_yy, s_zz]
  function: |
      function f (x)
        z = x["z"]
        Omega = math.min(1.0, math.max(0.0, (z + 22000.0)/5000.))
        Pf  = -1000 * 9.8 * z
        s_zz0 = 2670 * 9.8 * z
        b_xx = 1.025837
        b_yy = 0.974162
        b_xy = -0.158649
        return {
          s_xx = Omega*(b_xx*(s_zz0+Pf)-Pf)+(1.0-Omega)*s_zz0 + Pf,
          s_xy = Omega*(b_xy*(s_zz0+Pf)),
          s_yy = Omega*(b_yy*(s_zz0+Pf)-Pf)+(1.0-Omega)*s_zz0 + Pf,
          s_zz = s_zz0 + Pf
        }
      end

